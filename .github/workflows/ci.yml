name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
      - dev
      - v[0-9]+.[0-9]+
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTDOCFLAGS: -D warnings
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  tidy:
    uses: taiki-e/github-actions/.github/workflows/tidy.yml@main

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          # - target: x86_64-pc-windows-gnu
          #   rust: nightly-x86_64-gnu
          #   os: windows-latest
          # - target: x86_64-unknown-linux-musl
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    timeout-minutes: 60
    steps:
      - uses: taiki-e/checkout-action@v1
      - name: Install Rust
        run: rustup toolchain add ${{ matrix.rust || 'nightly' }} --no-self-update && rustup default ${{ matrix.rust || 'nightly' }}
      - run: make test

  test-tidy:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
          - macos-12
          - macos-13
          - macos-14
          # Error: [WinError 2] The system cannot find the file specified
          # tools/tidy.sh: error on line 89: "python${py_suffix}" -m venv .venv
          # - windows-2019
          # jq: error: syntax error, unexpected INVALID_CHARACTER, expecting ';' or ')' (Windows cmd shell quoting issues?) at <top-level>, line 1:
          # .packages[] | select(.id == "path+file:///D:/a/test/test/rust/bin#rust-test-bin@0.0.0"
          # tools/tidy.sh: error on line 163: jq ".packages[] | select(.id == ${id})" <<< "${metadata}"
          # - windows-2022
    runs-on: ${{ matrix.os }}
    steps:
      - uses: taiki-e/checkout-action@v1
      - run: brew install clang-format
        if: startsWith(matrix.os, 'macos')
      - name: Install Rust
        run: rustup toolchain add nightly --no-self-update && rustup default nightly
      - uses: taiki-e/install-action@shellcheck
      - uses: taiki-e/install-action@shfmt
      - run: type -P bash
      - run: bash --version
      - run: shfmt --version
      - run: shellcheck --version
      - run: node --version
      - run: npm --version
      - run: jq --version
      - run: python3 --version
      - run: rustup --version
      - run: clang-format --version
      - run: tools/tidy.sh
      - run: brew install bash
        if: startsWith(matrix.os, 'macos')
      - run: type -P bash
        if: startsWith(matrix.os, 'macos')
      - run: bash --version
        if: startsWith(matrix.os, 'macos')
      - run: tools/tidy.sh
        if: startsWith(matrix.os, 'macos')
  test-tidy-container:
    strategy:
      fail-fast: false
      matrix:
        container:
          # https://github.com/actions/runner/issues/2906
          # - ubuntu:18.04 # glibc 2.27
          - ubuntu:20.04 # glibc 2.31
          - ubuntu:22.04 # glibc 2.35
          - ubuntu:24.04 # glibc 2.39
          # jq: error (at <stdin>:44): Invalid path expression near attempt to access element 0 of [0]
          # tools/tidy.sh: error on line 408: jq 'del(.dictionaryDefinitions[] | select(.name == "organization-dictionary" | not))'
          # - debian:10-slim # glibc 2.28
          - debian:11-slim # glibc 2.31
          - debian:12-slim # glibc 2.36
          - fedora:latest # glibc 2.38 (as of fedora 39)
          - almalinux:8 # glibc 2.28
          - almalinux:8-minimal # glibc 2.28
          - almalinux:9 # glibc 2.34
          - almalinux:9-minimal # glibc 2.34
          # https://github.com/actions/runner/issues/2906
          # - centos:7 # glibc 2.17
          - alpine:latest # musl 1.2.4 (as of alpine 3.19)
    runs-on: ubuntu-latest
    timeout-minutes: 60
    container: ${{ matrix.container }}
    steps:
      - name: Install requirements (ubuntu/debian)
        run: |
          set -eEuxo pipefail
          apt-get -o Acquire::Retries=10 -qq update
          apt-get -o Acquire::Retries=10 -o Dpkg::Use-Pty=0 install -y --no-install-recommends ca-certificates curl clang-format python3-venv
        if: startsWith(matrix.container, 'ubuntu') || startsWith(matrix.container, 'debian')
      - name: Install requirements (fedora/almalinux/centos)
        run: |
          set -eEuxo pipefail
          if type -P dnf &>/dev/null; then
            dnf install -y clang-tools-extra python3
          elif type -P microdnf &>/dev/null; then
            microdnf install -y clang-tools-extra python3
          else
            yum install -y clang-tools-extra python3
          fi
        if: startsWith(matrix.container, 'fedora') || startsWith(matrix.container, 'almalinux') || startsWith(matrix.container, 'centos')
      - name: Install requirements (alpine)
        run: apk --no-cache add bash ca-certificates curl clang-extra-tools npm python3
        shell: sh
        if: startsWith(matrix.container, 'alpine')
      - uses: taiki-e/checkout-action@v1
      - name: Install Rust
        run: |
          set -eEuxo pipefail
          curl --proto '=https' --tlsv1.2 -fsSL --retry 10 https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain nightly --no-modify-path
          echo "$HOME/.cargo/bin" >>"${GITHUB_PATH}"
      - uses: actions/setup-node@v4
        with:
          node-version: 18
        if: (!startsWith(matrix.container, 'alpine'))
      - uses: taiki-e/install-action@shellcheck
      - uses: taiki-e/install-action@shfmt
      - run: type -P bash
      - run: bash --version
      - run: shfmt --version
      - run: shellcheck --version
      - run: node --version
      - run: npm --version
      - run: jq --version
      - run: python3 --version
      - run: rustup --version
      - run: clang-format --version
      - run: tools/tidy.sh

  codegen:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: taiki-e/checkout-action@v1
      - name: Install Rust
        run: rustup toolchain add nightly --no-self-update && rustup default nightly
      - run: make gen
      - id: diff
        run: tools/ci/gen.sh
        if: github.repository_owner == 'taiki-e' && (github.event_name == 'schedule' || github.event_name == 'push' && github.ref == 'refs/heads/main')
      - uses: peter-evans/create-pull-request@v6
        with:
          title: Update generated code
          body: |
            Auto-generated by [create-pull-request][1]
            [Please close and immediately reopen this pull request to run CI.][2]

            [1]: https://github.com/peter-evans/create-pull-request
            [2]: https://github.com/peter-evans/create-pull-request/blob/HEAD/docs/concepts-guidelines.md#workarounds-to-trigger-further-workflow-runs
          branch: gen
        if: github.repository_owner == 'taiki-e' && (github.event_name == 'schedule' || github.event_name == 'push' && github.ref == 'refs/heads/main') && steps.diff.outputs.success == 'false'
      - run: git add -N . && git diff --exit-code
