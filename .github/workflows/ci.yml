name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - staging
  schedule:
    - cron: '0 1 * * *'

env:
  RUSTFLAGS: -Dwarnings
  RUST_BACKTRACE: 1

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        rust:
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      # Is there an easy way to get around https://github.com/tokio-rs/tracing/issues/648?
      # - name: Cache cargo
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.cargo/bin
      #     key: ${{ runner.os }}-cargo-bin
      - name: Install Rust
        run: ci/install-rust.sh ${{ matrix.rust }}
      - run: cargo install cargo-hack
      - run: cargo test --all --all-features
      - run: cargo hack check --all --all-features --no-dev-deps
      - if: matrix.rust == 'nightly'
        run: bash scripts/check-minimal-versions.sh

  install-component:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        component:
          - clippy
          - rustfmt
          - miri
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - run: ci/install-component.sh ${{ matrix.component }}
      - if: matrix.component == 'clippy'
        run: cargo clippy --all --all-features --all-targets
      - if: matrix.component == 'rustfmt'
        run: bash scripts/rustfmt.sh check
      - if: matrix.component == 'miri'
        run: cargo miri test

  rustdoc:
    env:
      RUSTDOCFLAGS: -Dwarnings
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: ci/install-rust.sh
      - run: cargo doc --no-deps --all --all-features

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: shellcheck **/*.sh

  shfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install shfmt
        run: ci/install-shfmt.sh
      - run: bash scripts/shfmt.sh check

  # Refs: https://github.com/rust-lang/crater/blob/9ab6f9697c901c4a44025cf0a39b73ad5b37d198/.github/workflows/bors.yml#L125-L149
  #
  # These jobs don't actually test anything, but they're used to tell bors the
  # build completed, as there is no practical way to detect when a workflow is
  # successful listening to webhooks only.
  #
  # ALL THE PREVIOUS JOBS NEEDS TO BE ADDED TO THE `needs` SECTION OF THIS JOB!

  ci-success:
    name: ci
    if: github.event_name == 'push' && success()
    needs:
      - test
      - install-component
      - rustdoc
      - shellcheck
      - shfmt
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a success
        run: exit 0
  ci-failure:
    name: ci
    if: github.event_name == 'push' && !success()
    needs:
      - test
      - install-component
      - rustdoc
      - shellcheck
      - shfmt
    runs-on: ubuntu-latest
    steps:
      - name: Mark the job as a failure
        run: exit 1
