name: Release

permissions:
  # TODO: once `releases: write` is supported, use it instead.
  contents: write

on:
  push:
    tags:
      - test-v[0-9]+.*

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  create-release:
    if: github.repository_owner == 'taiki-e'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: hawkw/create-gh-release-action@eliza/prefix
        with:
          prefix: test
          changelog: CHANGELOG.md
          title: $prefix $version
          branch: 'main|v[0-9]+\.[0-9]+'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # upload-assets:
  #   name: ${{ matrix.target }}
  #   if: github.repository_owner == 'taiki-e'
  #   needs:
  #     - create-release
  #   strategy:
  #     matrix:
  #       include:
  #         - target: x86_64-unknown-linux-gnu
  #           os: ubuntu-18.04
  #         - target: x86_64-unknown-linux-musl
  #           os: ubuntu-latest
  #         - target: aarch64-unknown-linux-gnu
  #           os: ubuntu-latest
  #         - target: aarch64-unknown-linux-musl
  #           os: ubuntu-latest
  #         - target: arm-unknown-linux-gnueabihf
  #           os: ubuntu-latest
  #         - target: arm-unknown-linux-musleabihf
  #           os: ubuntu-latest
  #         - target: aarch64-linux-android
  #           os: ubuntu-latest
  #         - target: arm-linux-androideabi
  #           os: ubuntu-latest
  #         - target: armv7-linux-androideabi
  #           os: ubuntu-latest
  #         - target: x86_64-apple-darwin
  #           os: macos-latest
  #         - target: x86_64-pc-windows-msvc
  #           os: windows-latest
  #         - target: x86_64-pc-windows-gnu
  #           os: windows-latest
  #           rust: nightly-x86_64-gnu
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false
  #     - uses: taiki-e/github-actions/install-rust@main
  #       with:
  #         toolchain: ${{ matrix.rust || 'nightly' }}
  #     - run: |
  #         sudo apt-get update -qq
  #         sudo apt-get -o Dpkg::Use-Pty=0 install -y \
  #           gcc-arm-linux-gnueabi \
  #           gcc-arm-linux-gnueabihf \
  #           gcc-aarch64-linux-gnu
  #       if: startsWith(matrix.os, 'ubuntu')
  #     - uses: taiki-e/upload-rust-binary-action@strip
  #       with:
  #         bin: rust-test-bin
  #         target: ${{ matrix.target }}
  #         tar: all
  #         zip: all
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
  #         CARGO_PROFILE_RELEASE_LTO: true
