name: Release

permissions:
  # TODO: once `releases: write` is supported, use it instead.
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*
  # release:
  #   types: [created]

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  create-release:
    if: github.repository_owner == 'taiki-e'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@main
        id: create-gh-release
        with:
          # prefix: test
          changelog: CHANGELOG.md
          # title: $prefix $version
          # branch: 'main|v[0-9]+\.[0-9]+'
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          echo ${{ steps.create-gh-release.outputs.computed-prefix }}
          echo ${{ steps.create-gh-release.outputs.version }}

  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'taiki-e'
    needs:
      - create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup toolchain add ${{ matrix.rust || 'nightly' }} --no-self-update && rustup default ${{ matrix.rust || 'nightly' }}
      - uses: taiki-e/install-action@v2
      - uses: taiki-e/upload-rust-binary-action@main
        with:
          bin: rust-test-bin,a
          target: ${{ matrix.target }}
          archive: test-$target
          checksum: sha256,sha512,sha1,md5
          tar: all
          zip: all
          include: rust
          # leading_dir: true
          ref: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
